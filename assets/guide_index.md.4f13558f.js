import{_ as s,c as n,o as a,a as e}from"./app.2ec7a259.js";const A=JSON.parse('{"title":"Getting Started | Guide","description":"","frontmatter":{"title":"Getting Started | Guide"},"headers":[{"level":2,"title":"Overview","slug":"overview"},{"level":2,"title":"Trying Vitify Online","slug":"trying-vitify-online"},{"level":2,"title":"Project Structure","slug":"project-structure"},{"level":2,"title":"Use Vitify Admin to Start your Project","slug":"use-vitify-admin-to-start-your-project"},{"level":3,"title":"Github Template","slug":"github-template"},{"level":3,"title":"Clone to local","slug":"clone-to-local"},{"level":2,"title":"Usage","slug":"usage"},{"level":3,"title":"Development","slug":"development"},{"level":3,"title":"Build","slug":"build"},{"level":3,"title":"Type Check","slug":"type-check"},{"level":3,"title":"Testing","slug":"testing"},{"level":2,"title":"Contribution","slug":"contribution"}],"relativePath":"guide/index.md","lastUpdated":1661835909000}'),t={name:"guide/index.md"},l=e(`<h1 id="getting-started" tabindex="-1">Getting Started <a class="header-anchor" href="#getting-started" aria-hidden="true">#</a></h1><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-hidden="true">#</a></h2><p>Vitify Admin is an opinionated admin starter template.</p><p>You can learn more about the rationale behind the project in the <a href="./why.html">Why Vitify Admin</a> section.</p><h2 id="trying-vitify-online" tabindex="-1">Trying Vitify Online <a class="header-anchor" href="#trying-vitify-online" aria-hidden="true">#</a></h2><p>You can try Vitify Admin online on <a href="https://vitify-admin.netlify.app/" target="_blank" rel="noreferrer">Netlify</a>. Enter any username and password in demo login page to enter the home page.</p><h2 id="project-structure" tabindex="-1">Project Structure <a class="header-anchor" href="#project-structure" aria-hidden="true">#</a></h2><div class="language-bash"><button class="copy"></button><span class="lang">bash</span><pre><code><span class="line"><span style="color:#A6ACCD;">\u251C\u2500\u2500 .github               </span><span style="color:#676E95;"># GitHub Actions workflows</span></span>
<span class="line"><span style="color:#A6ACCD;">\u251C\u2500\u2500 .vscode               </span><span style="color:#676E95;"># settings of VSCode workspace</span></span>
<span class="line"><span style="color:#A6ACCD;">\u251C\u2500\u2500 cypress               </span><span style="color:#676E95;"># E2E spec files</span></span>
<span class="line"><span style="color:#A6ACCD;">\u251C\u2500\u2500 dist                  </span><span style="color:#676E95;"># output folder of production bundle</span></span>
<span class="line"><span style="color:#A6ACCD;">\u251C\u2500\u2500 patches               </span><span style="color:#676E95;"># patches for packages in node_modules</span></span>
<span class="line"><span style="color:#A6ACCD;">\u251C\u2500\u2500 public                </span><span style="color:#676E95;"># pure static assets (directly copied)</span></span>
<span class="line"><span style="color:#A6ACCD;">\u251C\u2500\u2500 scripts               </span><span style="color:#676E95;"># scripts</span></span>
<span class="line"><span style="color:#A6ACCD;">\u251C\u2500\u2500 src                   </span><span style="color:#676E95;"># application code</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502   \u251C\u2500\u2500 api               </span><span style="color:#676E95;"># API service</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502   \u251C\u2500\u2500 assets            </span><span style="color:#676E95;"># assets</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502   \u2502   \u251C\u2500icons           </span><span style="color:#676E95;"># SVG icons</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502   \u2502   \u251C\u2500images          </span><span style="color:#676E95;"># images</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502   \u2502   \u2514\u2500styles          </span><span style="color:#676E95;"># global Sass/CSS</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502   \u251C\u2500\u2500 components        </span><span style="color:#676E95;"># components</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502   \u251C\u2500\u2500 composables       </span><span style="color:#676E95;"># global composables</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502   \u251C\u2500\u2500 layouts           </span><span style="color:#676E95;"># layout components</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502   \u251C\u2500\u2500 locales           </span><span style="color:#676E95;"># i18n locale messages</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502   \u251C\u2500\u2500 mocks             </span><span style="color:#676E95;"># API mocking data</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502   \u251C\u2500\u2500 pages             </span><span style="color:#676E95;"># pages</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502   \u251C\u2500\u2500 plugins           </span><span style="color:#676E95;"># third-party plugins</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502   \u251C\u2500\u2500 stores            </span><span style="color:#676E95;"># pinia stores</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502   \u251C\u2500\u2500 App.vue           </span><span style="color:#676E95;"># root component</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502   \u251C\u2500\u2500 auto-imports.d.ts </span><span style="color:#676E95;"># type declaration generated by \`unplugin-auto-import\`</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502   \u251C\u2500\u2500 components.d.ts   </span><span style="color:#676E95;"># type declaration for global components</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502   \u251C\u2500\u2500 main.ts           </span><span style="color:#676E95;"># JavaScript entry point</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502   \u251C\u2500\u2500 route-meta.ts     </span><span style="color:#676E95;"># type declaration for route meta</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502   \u251C\u2500\u2500 shim.d.ts         </span><span style="color:#676E95;"># shim missing types in dependencies</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502   \u2514\u2500\u2500 vuetify2.d.ts     </span><span style="color:#676E95;"># type declaration for Vuetify2 components</span></span>
<span class="line"><span style="color:#A6ACCD;">\u251C\u2500\u2500 </span><span style="color:#82AAFF;">test</span><span style="color:#A6ACCD;">                  </span><span style="color:#676E95;"># unit testing setup and helper files</span></span>
<span class="line"><span style="color:#A6ACCD;">\u251C\u2500\u2500 .editorconfig         </span><span style="color:#676E95;"># EditorConfig settings</span></span>
<span class="line"><span style="color:#A6ACCD;">\u251C\u2500\u2500 .env                  </span><span style="color:#676E95;"># environment variables</span></span>
<span class="line"><span style="color:#A6ACCD;">\u251C\u2500\u2500 .env.local            </span><span style="color:#676E95;"># local environment variables</span></span>
<span class="line"><span style="color:#A6ACCD;">\u251C\u2500\u2500 .eslintrc.cjs         </span><span style="color:#676E95;"># ESLint configuration</span></span>
<span class="line"><span style="color:#A6ACCD;">\u251C\u2500\u2500 .gitignore            </span><span style="color:#676E95;"># git intentionally untracked files settings</span></span>
<span class="line"><span style="color:#A6ACCD;">\u251C\u2500\u2500 .npmrc                </span><span style="color:#676E95;"># pnpm/npm/yarn configuration</span></span>
<span class="line"><span style="color:#A6ACCD;">\u251C\u2500\u2500 .prettierrc           </span><span style="color:#676E95;"># Prettier configuration</span></span>
<span class="line"><span style="color:#A6ACCD;">\u251C\u2500\u2500 cypress.config.ts     </span><span style="color:#676E95;"># Cypress configuration</span></span>
<span class="line"><span style="color:#A6ACCD;">\u251C\u2500\u2500 env.d.ts              </span><span style="color:#676E95;"># type declaration for \`i<wbr>mport.meta.env\`</span></span>
<span class="line"><span style="color:#A6ACCD;">\u251C\u2500\u2500 index.html            </span><span style="color:#676E95;"># entry point</span></span>
<span class="line"><span style="color:#A6ACCD;">\u251C\u2500\u2500 LICENSE               </span><span style="color:#676E95;"># license</span></span>
<span class="line"><span style="color:#A6ACCD;">\u251C\u2500\u2500 netlify.toml          </span><span style="color:#676E95;"># Netlify deployment configuration</span></span>
<span class="line"><span style="color:#A6ACCD;">\u251C\u2500\u2500 package.json          </span><span style="color:#676E95;"># project metadata</span></span>
<span class="line"><span style="color:#A6ACCD;">\u251C\u2500\u2500 pnpm-lock.yaml        </span><span style="color:#676E95;"># pnpm lock file</span></span>
<span class="line"><span style="color:#A6ACCD;">\u251C\u2500\u2500 postcss.config.ts     </span><span style="color:#676E95;"># PostCSS configuration</span></span>
<span class="line"><span style="color:#A6ACCD;">\u251C\u2500\u2500 README.md             </span><span style="color:#676E95;"># README file</span></span>
<span class="line"><span style="color:#A6ACCD;">\u251C\u2500\u2500 tsconfig.app.json     </span><span style="color:#676E95;"># TypeScript options for application code</span></span>
<span class="line"><span style="color:#A6ACCD;">\u251C\u2500\u2500 tsconfig.cypress.json </span><span style="color:#676E95;"># TypeScript options for Cypress spec files</span></span>
<span class="line"><span style="color:#A6ACCD;">\u251C\u2500\u2500 tsconfig.json         </span><span style="color:#676E95;"># TypeScript options root file</span></span>
<span class="line"><span style="color:#A6ACCD;">\u251C\u2500\u2500 tsconfig.config.json  </span><span style="color:#676E95;"># TypeScript options for Vite configuration</span></span>
<span class="line"><span style="color:#A6ACCD;">\u251C\u2500\u2500 tsconfig.vitest.json  </span><span style="color:#676E95;"># TypeScript options for Vitest files</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2514\u2500\u2500 vite.config.ts        </span><span style="color:#676E95;"># Vite configuration</span></span>
<span class="line"></span></code></pre></div><h2 id="use-vitify-admin-to-start-your-project" tabindex="-1">Use Vitify Admin to Start your Project <a class="header-anchor" href="#use-vitify-admin-to-start-your-project" aria-hidden="true">#</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Vitify Admin requires Node &gt;=v16</p></div><h3 id="github-template" tabindex="-1">Github Template <a class="header-anchor" href="#github-template" aria-hidden="true">#</a></h3><p><a href="https://github.com/kingyue737/vitify-admin/generate" target="_blank" rel="noreferrer">Create a repo from this template on GitHub</a>.</p><h3 id="clone-to-local" tabindex="-1">Clone to local <a class="header-anchor" href="#clone-to-local" aria-hidden="true">#</a></h3><p>If you prefer to do it manually with the cleaner git history</p><div class="language-bash"><button class="copy"></button><span class="lang">bash</span><pre><code><span class="line"><span style="color:#A6ACCD;">npx degit kingyue737/vitify-admin my-vitify-app</span></span>
<span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> my-vitify-app</span></span>
<span class="line"><span style="color:#A6ACCD;">pnpm i</span></span>
<span class="line"></span></code></pre></div><blockquote><p>Vitify Admin requires <a href="https://pnpm.io/cli/patch" target="_blank" rel="noreferrer"><code>pnpm patch</code></a> to fix bugs in dependencies before maintainers release them. If you are using <code>yarn</code>, you can use <a href="https://yarnpkg.com/cli/patch" target="_blank" rel="noreferrer"><code>yarn patch</code></a>. For <code>npm</code> users, <a href="https://github.com/ds300/patch-package" target="_blank" rel="noreferrer"><code>patch-package</code></a> is required as <code>npm</code> has no built-in patching functionality.</p></blockquote><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-hidden="true">#</a></h2><h3 id="development" tabindex="-1">Development <a class="header-anchor" href="#development" aria-hidden="true">#</a></h3><p>Just run and visit <a href="http://localhost:9527" target="_blank" rel="noreferrer">localhost:9527</a></p><div class="language-bash"><button class="copy"></button><span class="lang">bash</span><pre><code><span class="line"><span style="color:#A6ACCD;">pnpm dev</span></span>
<span class="line"></span></code></pre></div><h3 id="build" tabindex="-1">Build <a class="header-anchor" href="#build" aria-hidden="true">#</a></h3><p>To build the App, run</p><div class="language-bash"><button class="copy"></button><span class="lang">bash</span><pre><code><span class="line"><span style="color:#A6ACCD;">pnpm build</span></span>
<span class="line"></span></code></pre></div><p>And you will see the generated file in <code>dist</code> that ready to be served.</p><h3 id="type-check" tabindex="-1">Type Check <a class="header-anchor" href="#type-check" aria-hidden="true">#</a></h3><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">pnpm typecheck</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="testing" tabindex="-1">Testing <a class="header-anchor" href="#testing" aria-hidden="true">#</a></h3><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">pnpm test:unit</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>For E2E test, you need to build the project first</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">pnpm build</span></span>
<span class="line"><span style="color:#A6ACCD;">pnpm test:e2e</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h2 id="contribution" tabindex="-1">Contribution <a class="header-anchor" href="#contribution" aria-hidden="true">#</a></h2><p>The repository of documentation is <a href="https://github.com/kingyue737/vitify-docs" target="_blank" rel="noreferrer">vitify-docs</a> based on <a href="https://vitepress.vuejs.org/" target="_blank" rel="noreferrer">VitePress</a>.</p><p>There may be some spelling or translation errors in the course of writing this document. It is welcome to point out by issue or PR.</p><p>Vitify Admin is also continuing to iterate, include more features and incorporate best practices. Once Vuetify v3.1 is released, I will create a new branch for Vue 3. This project is also very much looking forward to your participation and <a href="https://github.com/kingyue737/vitify-admin/issues" target="_blank" rel="noreferrer">feedback</a>. Don&#39;t hesitate to open a <a href="https://github.com/kingyue737/vitify-admin/discussions" target="_blank" rel="noreferrer">discussion</a> if you have any question.</p>`,34),p=[l];function o(i,r,c,d,y,u){return a(),n("div",null,p)}const C=s(t,[["render",o]]);export{A as __pageData,C as default};
