import{_ as s,c as a,o as n,a as e}from"./app.01a2db86.js";const d=JSON.parse('{"title":"Chart","description":"","frontmatter":{},"headers":[{"level":2,"title":"Configure Contextual Options","slug":"configure-contextual-options"}],"relativePath":"guide/chart.md","lastUpdated":1661075145000}'),o={name:"guide/chart.md"},t=e(`<h1 id="chart" tabindex="-1">Chart <a class="header-anchor" href="#chart" aria-hidden="true">#</a></h1><p>Data visualization with charts is common requirement in an admin platform. In Vitify Admin, we use <a href="https://github.com/ecomfe/vue-echarts" target="_blank" rel="noreferrer">vue-echarts</a>, a Vue.js component for <a href="https://echarts.apache.org/en/index.html" target="_blank" rel="noreferrer">Apache ECharts</a>. Vue-ECharts component auto resizes ECharts instance when the size of its parent container changes and bind ECharts events with Vue&#39;s <code>v-on</code> directive.</p><p>We encourage manually importing components and charts from ECharts for smaller bundle size. See all supported renderers/charts/components <a href="https://github.com/apache/echarts/blob/master/src/echarts.all.ts" target="_blank" rel="noreferrer">here \u2192</a>. According your requirement, adjusting which features of ECharts to included in <a href="https://github.com/kingyue737/vitify-admin/blob/main/src/plugins/echarts.ts" target="_blank" rel="noreferrer"><code>src/plugins/echarts.ts</code></a>.</p><h2 id="configure-contextual-options" tabindex="-1">Configure Contextual Options <a class="header-anchor" href="#configure-contextual-options" aria-hidden="true">#</a></h2><p>Vue-ECharts provides provide/inject API for theme, init-options, update-options and loading-options to help configuring contextual options. You can notice that reactive state of <code>locale</code> and <code>theme</code> are provided from <code>App.vue</code> to control dark mode and locale of all ECharts instances.</p><div class="language-ts"><button class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> vuetify </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">useVuetify</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> locale </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">useI18n</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"><span style="color:#82AAFF;">provide</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">  THEME_KEY</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">computed</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> (vuetify</span><span style="color:#89DDFF;">?.</span><span style="color:#A6ACCD;">theme</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">dark </span><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dark</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">undefined</span><span style="color:#A6ACCD;">))</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#82AAFF;">provide</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">  INIT_OPTIONS_KEY</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">computed</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> (</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">locale</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> locale</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">value</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toUpperCase</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">))</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div>`,6),l=[t];function p(r,c,i,A,C,D){return n(),a("div",null,l)}const h=s(o,[["render",p]]);export{d as __pageData,h as default};
