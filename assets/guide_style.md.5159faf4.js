import{_ as s,c as e,o as a,a as t}from"./app.01a2db86.js";const f=JSON.parse('{"title":"Style","description":"","frontmatter":{},"headers":[{"level":2,"title":"CSS Pre-processor","slug":"css-pre-processor"},{"level":2,"title":"Styles Folder Structure","slug":"styles-folder-structure"},{"level":2,"title":"PostCSS","slug":"postcss"}],"relativePath":"guide/style.md","lastUpdated":1661230677000}'),o={name:"guide/style.md"},l=t(`<h1 id="style" tabindex="-1">Style <a class="header-anchor" href="#style" aria-hidden="true">#</a></h1><h2 id="css-pre-processor" tabindex="-1">CSS Pre-processor <a class="header-anchor" href="#css-pre-processor" aria-hidden="true">#</a></h2><p>Vite provides built-in support for <code>.scss</code>, <code>.sass</code>, <code>.less</code>, <code>.styl</code> and <code>.stylus</code> files. As Vuetify styles are written in <a href="https://sass-lang.com/" target="_blank" rel="noreferrer">Sass</a>, we choose SCSS which has out-of-the-box support in VSCode.</p><h2 id="styles-folder-structure" tabindex="-1">Styles Folder Structure <a class="header-anchor" href="#styles-folder-structure" aria-hidden="true">#</a></h2><p>All global styles of Vitify Admin are set in the <code>@/assets/styles</code> directory.</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">\u251C\u2500\u2500 styles</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502   \u251C\u2500\u2500 _overrides.scss          # global style overrides vuetify predefined style</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502   \u251C\u2500\u2500 _scrollbar.scss          # custom scrollbar style (only works in chromium)</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502   \u251C\u2500\u2500 _utils.scss              # style utils</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502   \u251C\u2500\u2500 index.scss               # entry point of global styles</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502   \u251C\u2500\u2500 variables.scss           # custom Sass variables</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502   \u2514\u2500\u2500 vuetify-variables.scss   # custom Vuetify Sass variables</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>The common workflow is that the global styles are written in the <code>@/assets/styles</code> directory and each page&#39;s own style is written in its own <code>.vue</code> file.</p><div class="language-vue"><button class="copy"></button><span class="lang">vue</span><pre><code><span class="line"><span style="color:#A6ACCD;">// Vue SFC</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">style</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">scoped</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">lang</span><span style="color:#A6ACCD;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">scss</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#676E95;">/* local styles */</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><h2 id="postcss" tabindex="-1">PostCSS <a class="header-anchor" href="#postcss" aria-hidden="true">#</a></h2><p>Valid PostCSS config (any format supported by <a href="https://github.com/postcss/postcss-load-config" target="_blank" rel="noreferrer">postcss-load-config</a>, e.g. <code>postcss.config.ts</code>), will be automatically applied to all imported CSS. Vitify Admin includes <a href="https://github.com/csstools/postcss-plugins/tree/main/plugin-packs/postcss-preset-env" target="_blank" rel="noreferrer">PostCSS Preset Env</a> which converts modern CSS into something most browsers can understand, determining the polyfills you need based on your targeted browsers (retrieve from <code>browserslist</code>) or runtime environments. It also packs <a href="https://github.com/postcss/autoprefixer" target="_blank" rel="noreferrer">Autoprefixer</a> within and shares the list with it, so prefixes are only applied when you&#39;re going to need them given your browser support list.</p>`,10),n=[l];function r(c,p,i,d,y,u){return a(),e("div",null,n)}const g=s(o,[["render",r]]);export{f as __pageData,g as default};
